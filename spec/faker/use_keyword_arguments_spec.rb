# frozen_string_literal: true

require 'spec_helper'

RSpec.describe 'Fake uses keyword arguments' do
  let(:rewriter_name) { 'faker/use_keyword_arguments' }
  let(:fake_file_path) { 'db/seeds/user_factory.rb' }
  let(:test_content) { <<~EOS }
    Faker::Books::Dune.quote('foobar')
    Faker::Books::Dune.saying('foobar')
    Faker::Books::Lovecraft.fhtagn(5)
    Faker::Books::Lovecraft.paragraph(5)
    Faker::Books::Lovecraft.paragraph(5, 5)
    Faker::Books::Lovecraft.paragraph_by_chars(5)
    Faker::Books::Lovecraft.paragraphs(5)
    Faker::Books::Lovecraft.sentence(5)
    Faker::Books::Lovecraft.sentence(5, 5)
    Faker::Books::Lovecraft.sentences(5)
    Faker::Books::Lovecraft.words(5)
    Faker::Books::Lovecraft.words(5, 5)
    Faker::Address.city({})
    Faker::Address.postcode('CA')
    Faker::Address.street_address(true)
    Faker::Address.zip('CA')
    Faker::Address.zip_code('CA')
    Faker::Alphanumeric.alpha(5)
    Faker::Alphanumeric.alphanumeric(5)
    Faker::Avatar.image('my slug')
    Faker::Avatar.image('my slug', '50x50')
    Faker::Avatar.image('my slug', '50x50', 'bmp')
    Faker::Avatar.image('my slug', '50x50', 'bmp', 'set1')
    Faker::Avatar.image('my slug', '50x50', 'bmp', 'set1', 'bg1')
    Faker::Bank.account_number(5)
    Faker::Bank.iban('CN')
    Faker::ChileRut.full_rut(5)
    Faker::ChileRut.full_rut(5, true)
    Faker::ChileRut.rut(5)
    Faker::ChileRut.rut(5, true)
    Faker::Code.ean(10)
    Faker::Code.isbn(10)
    Faker::Code.nric(18)
    Faker::Code.nric(18, 65)
    Faker::Commerce.department(3)
    Faker::Commerce.department(3, false)
    Faker::Commerce.price(0..100)
    Faker::Commerce.price(0..100, false)
    Faker::Commerce.promotion_code(5)
    Faker::Company.polish_register_of_national_economy(5)
    Faker::CryptoCoin.acronym('Bitcoin')
    Faker::CryptoCoin.coin_name('Bitcoin')
    Faker::CryptoCoin.url_logo('Bitcoin')
    Faker::Date.backward(5)
    Faker::Date.between('2014-09-23', '2014-9-25')
    Faker::Date.between_except('2014-09-23', '2014-09-25', '2014-09-24')
    Faker::Date.birthday(18)
    Faker::Date.birthday(18, 65)
    Faker::Date.forward(5)
    Faker::Demographic.height('cm')
    Faker::File.dir(3)
    Faker::File.dir(3, nil)
    Faker::File.dir(3, nil, '/')
    Faker::File.file_name('foo/bar')
    Faker::File.file_name('foo/bar', 'baz')
    Faker::File.file_name('foo/bar', 'baz', 'doc')
    Faker::File.file_name('foo/bar', 'baz', 'doc', '/')
    Faker::Fillmurray.image(false)
    Faker::Fillmurray.image(false, 200)
    Faker::Fillmurray.image(false, 200, 400)
    Faker::Finance.vat_number('CN')
    Faker::Hipster.paragraph(5)
    Faker::Hipster.paragraph(5, false)
    Faker::Hipster.paragraph(5, false, 5)
    Faker::Hipster.paragraph_by_chars(5)
    Faker::Hipster.paragraph_by_chars(5, false)
    Faker::Hipster.paragraphs(5)
    Faker::Hipster.paragraphs(5, false)
    Faker::Hipster.sentence(5)
    Faker::Hipster.sentence(5, false)
    Faker::Hipster.sentence(5, false, 5)
    Faker::Hipster.sentences(5)
    Faker::Hipster.sentences(5, false)
    Faker::Hipster.words(5)
    Faker::Hipster.words(5, false)
    Faker::Hipster.words(5, false, true)
    Faker::Internet.domain_name('dev')
    Faker::Internet.email('smith', ['-'])
    Faker::Internet.fix_umlauts('faker')
    Faker::Internet.free_email('smith')
    Faker::Internet.mac_address('aa')
    Faker::Internet.password(10)
    Faker::Internet.password(10, 20)
    Faker::Internet.password(10, 20, true)
    Faker::Internet.password(10, 20, true, true)
    Faker::Internet.safe_email('smith')
    Faker::Internet.slug('test, faker')
    Faker::Internet.slug('test, faker', '$')
    Faker::Internet.url('faker')
    Faker::Internet.url('faker', '/docs')
    Faker::Internet.url('faker', '/docs', 'https')
    Faker::Internet.user_agent('faker')
    Faker::Internet.user_name(10)
    Faker::Internet.user_name(10, ['-'])
    Faker::Internet.username(10)
    Faker::Internet.username(10, ['-'])
    Faker::Invoice.amount_between(0)
    Faker::Invoice.amount_between(0, 10)
    Faker::Invoice.creditor_reference('rf')
    Faker::Invoice.reference('rf')
    Faker::Json.add_depth_to_json(json)
    Faker::Json.add_depth_to_json(json, 4)
    Faker::Json.add_depth_to_json(json, 4, key: 'Name.first_name', value: 'Name.last_name')
    Faker::Json.add_depth_to_json(json, 4, { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Json.shallow_json(3)
    Faker::Json.shallow_json(3, key: 'Name.first_name', value: 'Name.last_name')
    Faker::Json.shallow_json(3, { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Lorem.characters(5)
    Faker::Lorem.paragraph(5)
    Faker::Lorem.paragraph(5, true)
    Faker::Lorem.paragraph(5, true, 'sit')
    Faker::Lorem.paragraph_by_chars(5)
    Faker::Lorem.paragraph_by_chars(5, false)
    Faker::Lorem.paragraphs(5)
    Faker::Lorem.paragraphs(5, false)
    Faker::Lorem.question(5)
    Faker::Lorem.question(5, false)
    Faker::Lorem.question(5, false, 5)
    Faker::Lorem.questions(5)
    Faker::Lorem.questions(5, false)
    Faker::Lorem.sentence(5)
    Faker::Lorem.sentence(5, false)
    Faker::Lorem.sentence(5, false, 5)
    Faker::Lorem.sentences(5)
    Faker::Lorem.sentences(5, false)
    Faker::Lorem.words(5)
    Faker::Lorem.words(5, false)
    Faker::LoremFlickr.colorized_image('50x50')
    Faker::LoremFlickr.colorized_image('50x50', 'red')
    Faker::LoremFlickr.colorized_image('50x50', 'red', ['sports'])
    Faker::LoremFlickr.colorized_image('50x50', 'red', ['sports'], true)
    Faker::LoremFlickr.grayscale_image('50x50')
    Faker::LoremFlickr.grayscale_image('50x50', ['sports'])
    Faker::LoremFlickr.grayscale_image('50x50', ['sports'], true)
    Faker::LoremFlickr.image('50x50')
    Faker::LoremFlickr.image('50x50', ['sports'])
    Faker::LoremFlickr.image('50x50', ['sports'], true)
    Faker::LoremFlickr.pixelated_image('50x50')
    Faker::LoremFlickr.pixelated_image('50x50', ['sports'])
    Faker::LoremFlickr.pixelated_image('50x50', ['sports'], true)
    Faker::LoremPixel.image('50x50')
    Faker::LoremPixel.image('50x50', true)
    Faker::LoremPixel.image('50x50', true, 'sports')
    Faker::LoremPixel.image('50x50', true, 'sports', 5)
    Faker::LoremPixel.image('50x50', true, 'sports', 5, 'football')
    Faker::LoremPixel.image('50x50', true, 'sports', 5, 'football', true)
    Faker::Markdown.sandwich(5)
    Faker::Markdown.sandwich(5, 1)
    Faker::Measurement.height(5)
    Faker::Measurement.length(5)
    Faker::Measurement.metric_height(5)
    Faker::Measurement.metric_length(5)
    Faker::Measurement.metric_volume(5)
    Faker::Measurement.metric_weight(5)
    Faker::Measurement.volume(5)
    Faker::Measurement.weight(5)
    Faker::Name.initials(5)
    Faker::NationalHealthService.check_digit(5)
    Faker::Number.between(0)
    Faker::Number.between(0, 10)
    Faker::Number.decimal(5)
    Faker::Number.decimal(5, 5)
    Faker::Number.decimal_part(5)
    Faker::Number.hexadecimal(5)
    Faker::Number.leading_zero_number(5)
    Faker::Number.negative(0)
    Faker::Number.negative(0, 10)
    Faker::Number.normal(1)
    Faker::Number.normal(1, 1)
    Faker::Number.number(5)
    Faker::Number.positive(0)
    Faker::Number.positive(0, 10)
    Faker::Number.within(0..10)
    Faker::PhoneNumber.extension(5)
    Faker::PhoneNumber.subscriber_number(5)
    Faker::Placeholdit.image('50x50')
    Faker::Placeholdit.image('50x50', 'png')
    Faker::Placeholdit.image('50x50', 'png', 'ffffff')
    Faker::Placeholdit.image('50x50', 'png', 'ffffff', '000')
    Faker::Placeholdit.image('50x50', 'png', 'ffffff', '000', 'custom text')
    Faker::Relationship.familial('Grandfather')
    Faker::Source.hello_world('ruby')
    Faker::Source.print_1_to_10('ruby')
    Faker::String.random(5)
    Faker::Stripe.ccv('amex')
    Faker::Stripe.invalid_card('addressZipFail')
    Faker::Stripe.valid_card('amex')
    Faker::Stripe.valid_token('amex')
    Faker::Time.backward(365)
    Faker::Time.backward(365, :all)
    Faker::Time.backward(365, :all, :short)
    Faker::Time.between(DateTime.now - 1, DateTime.now)
    Faker::Time.between(DateTime.now - 1, DateTime.now, :long)
    Faker::Time.forward(365)
    Faker::Time.forward(365, :all)
    Faker::Time.forward(365, :all, :short)
    Faker::Types.complex_rb_hash(5)
    Faker::Types.rb_array(5)
    Faker::Types.rb_hash(5)
    Faker::Types.rb_hash(5, 'string')
    Faker::Types.rb_integer(0)
    Faker::Types.rb_integer(0, 10)
    Faker::Types.rb_string(5)
    Faker::Vehicle.kilometrage(0)
    Faker::Vehicle.kilometrage(0, 10)
    Faker::Vehicle.license_plate('CA')
    Faker::Vehicle.mileage(0)
    Faker::Vehicle.mileage(0, 10)
    Faker::Vehicle.model('Tesla')
    Faker::WorldCup.group('groupA')
    Faker::WorldCup.roster('Spain')
    Faker::WorldCup.roster('Spain', 'forward')
    Faker::Movies::StarWars.quote('foobar')
  EOS

  let(:test_rewritten_content) { <<~EOS }
    Faker::Books::Dune.quote(character: 'foobar')
    Faker::Books::Dune.saying(source: 'foobar')
    Faker::Books::Lovecraft.fhtagn(number: 5)
    Faker::Books::Lovecraft.paragraph(sentence_count: 5)
    Faker::Books::Lovecraft.paragraph(sentence_count: 5, random_sentences_to_add: 5)
    Faker::Books::Lovecraft.paragraph_by_chars(characters: 5)
    Faker::Books::Lovecraft.paragraphs(number: 5)
    Faker::Books::Lovecraft.sentence(word_count: 5)
    Faker::Books::Lovecraft.sentence(word_count: 5, random_words_to_add: 5)
    Faker::Books::Lovecraft.sentences(number: 5)
    Faker::Books::Lovecraft.words(number: 5)
    Faker::Books::Lovecraft.words(number: 5, spaces_allowed: 5)
    Faker::Address.city(options: {})
    Faker::Address.postcode(state_abbreviation: 'CA')
    Faker::Address.street_address(include_secondary: true)
    Faker::Address.zip(state_abbreviation: 'CA')
    Faker::Address.zip_code(state_abbreviation: 'CA')
    Faker::Alphanumeric.alpha(number: 5)
    Faker::Alphanumeric.alphanumeric(number: 5)
    Faker::Avatar.image(slug: 'my slug')
    Faker::Avatar.image(slug: 'my slug', size: '50x50')
    Faker::Avatar.image(slug: 'my slug', size: '50x50', format: 'bmp')
    Faker::Avatar.image(slug: 'my slug', size: '50x50', format: 'bmp', set: 'set1')
    Faker::Avatar.image(slug: 'my slug', size: '50x50', format: 'bmp', set: 'set1', bgset: 'bg1')
    Faker::Bank.account_number(digits: 5)
    Faker::Bank.iban(country_code: 'CN')
    Faker::ChileRut.full_rut(min_rut: 5)
    Faker::ChileRut.full_rut(min_rut: 5, fixed: true)
    Faker::ChileRut.rut(min_rut: 5)
    Faker::ChileRut.rut(min_rut: 5, fixed: true)
    Faker::Code.ean(base: 10)
    Faker::Code.isbn(base: 10)
    Faker::Code.nric(min_age: 18)
    Faker::Code.nric(min_age: 18, max_age: 65)
    Faker::Commerce.department(max: 3)
    Faker::Commerce.department(max: 3, fixed_amount: false)
    Faker::Commerce.price(range: 0..100)
    Faker::Commerce.price(range: 0..100, as_string: false)
    Faker::Commerce.promotion_code(digits: 5)
    Faker::Company.polish_register_of_national_economy(length: 5)
    Faker::CryptoCoin.acronym(coin: 'Bitcoin')
    Faker::CryptoCoin.coin_name(coin: 'Bitcoin')
    Faker::CryptoCoin.url_logo(coin: 'Bitcoin')
    Faker::Date.backward(days: 5)
    Faker::Date.between(from: '2014-09-23', to: '2014-9-25')
    Faker::Date.between_except(from: '2014-09-23', to: '2014-09-25', excepted: '2014-09-24')
    Faker::Date.birthday(min_age: 18)
    Faker::Date.birthday(min_age: 18, max_age: 65)
    Faker::Date.forward(days: 5)
    Faker::Demographic.height(unit: 'cm')
    Faker::File.dir(segment_count: 3)
    Faker::File.dir(segment_count: 3, root: nil)
    Faker::File.dir(segment_count: 3, root: nil, directory_separator: '/')
    Faker::File.file_name(dir: 'foo/bar')
    Faker::File.file_name(dir: 'foo/bar', name: 'baz')
    Faker::File.file_name(dir: 'foo/bar', name: 'baz', ext: 'doc')
    Faker::File.file_name(dir: 'foo/bar', name: 'baz', ext: 'doc', directory_separator: '/')
    Faker::Fillmurray.image(grayscale: false)
    Faker::Fillmurray.image(grayscale: false, width: 200)
    Faker::Fillmurray.image(grayscale: false, width: 200, height: 400)
    Faker::Finance.vat_number(country: 'CN')
    Faker::Hipster.paragraph(sentence_count: 5)
    Faker::Hipster.paragraph(sentence_count: 5, supplemental: false)
    Faker::Hipster.paragraph(sentence_count: 5, supplemental: false, random_sentences_to_add: 5)
    Faker::Hipster.paragraph_by_chars(characters: 5)
    Faker::Hipster.paragraph_by_chars(characters: 5, supplemental: false)
    Faker::Hipster.paragraphs(number: 5)
    Faker::Hipster.paragraphs(number: 5, supplemental: false)
    Faker::Hipster.sentence(word_count: 5)
    Faker::Hipster.sentence(word_count: 5, supplemental: false)
    Faker::Hipster.sentence(word_count: 5, supplemental: false, random_words_to_add: 5)
    Faker::Hipster.sentences(number: 5)
    Faker::Hipster.sentences(number: 5, supplemental: false)
    Faker::Hipster.words(number: 5)
    Faker::Hipster.words(number: 5, supplemental: false)
    Faker::Hipster.words(number: 5, supplemental: false, spaces_allowed: true)
    Faker::Internet.domain_name(subdomain: 'dev')
    Faker::Internet.email(name: 'smith', separators: ['-'])
    Faker::Internet.fix_umlauts(string: 'faker')
    Faker::Internet.free_email(name: 'smith')
    Faker::Internet.mac_address(prefix: 'aa')
    Faker::Internet.password(min_length: 10)
    Faker::Internet.password(min_length: 10, max_length: 20)
    Faker::Internet.password(min_length: 10, max_length: 20, mix_case: true)
    Faker::Internet.password(min_length: 10, max_length: 20, mix_case: true, special_characters: true)
    Faker::Internet.safe_email(name: 'smith')
    Faker::Internet.slug(words: 'test, faker')
    Faker::Internet.slug(words: 'test, faker', glue: '$')
    Faker::Internet.url(host: 'faker')
    Faker::Internet.url(host: 'faker', path: '/docs')
    Faker::Internet.url(host: 'faker', path: '/docs', scheme: 'https')
    Faker::Internet.user_agent(vendor: 'faker')
    Faker::Internet.user_name(specifier: 10)
    Faker::Internet.user_name(specifier: 10, separators: ['-'])
    Faker::Internet.username(specifier: 10)
    Faker::Internet.username(specifier: 10, separators: ['-'])
    Faker::Invoice.amount_between(from: 0)
    Faker::Invoice.amount_between(from: 0, to: 10)
    Faker::Invoice.creditor_reference(ref: 'rf')
    Faker::Invoice.reference(ref: 'rf')
    Faker::Json.add_depth_to_json(json: json)
    Faker::Json.add_depth_to_json(json: json, width: 4)
    Faker::Json.add_depth_to_json(json: json, width: 4, options: { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Json.add_depth_to_json(json: json, width: 4, options: { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Json.shallow_json(width: 3)
    Faker::Json.shallow_json(width: 3, options: { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Json.shallow_json(width: 3, options: { key: 'Name.first_name', value: 'Name.last_name' })
    Faker::Lorem.characters(number: 5)
    Faker::Lorem.paragraph(sentence_count: 5)
    Faker::Lorem.paragraph(sentence_count: 5, supplemental: true)
    Faker::Lorem.paragraph(sentence_count: 5, supplemental: true, random_sentences_to_add: 'sit')
    Faker::Lorem.paragraph_by_chars(number: 5)
    Faker::Lorem.paragraph_by_chars(number: 5, supplemental: false)
    Faker::Lorem.paragraphs(number: 5)
    Faker::Lorem.paragraphs(number: 5, supplemental: false)
    Faker::Lorem.question(word_count: 5)
    Faker::Lorem.question(word_count: 5, supplemental: false)
    Faker::Lorem.question(word_count: 5, supplemental: false, random_words_to_add: 5)
    Faker::Lorem.questions(number: 5)
    Faker::Lorem.questions(number: 5, supplemental: false)
    Faker::Lorem.sentence(word_count: 5)
    Faker::Lorem.sentence(word_count: 5, supplemental: false)
    Faker::Lorem.sentence(word_count: 5, supplemental: false, random_words_to_add: 5)
    Faker::Lorem.sentences(number: 5)
    Faker::Lorem.sentences(number: 5, supplemental: false)
    Faker::Lorem.words(number: 5)
    Faker::Lorem.words(number: 5, supplemental: false)
    Faker::LoremFlickr.colorized_image(size: '50x50')
    Faker::LoremFlickr.colorized_image(size: '50x50', color: 'red')
    Faker::LoremFlickr.colorized_image(size: '50x50', color: 'red', search_terms: ['sports'])
    Faker::LoremFlickr.colorized_image(size: '50x50', color: 'red', search_terms: ['sports'], match_all: true)
    Faker::LoremFlickr.grayscale_image(size: '50x50')
    Faker::LoremFlickr.grayscale_image(size: '50x50', search_terms: ['sports'])
    Faker::LoremFlickr.grayscale_image(size: '50x50', search_terms: ['sports'], match_all: true)
    Faker::LoremFlickr.image(size: '50x50')
    Faker::LoremFlickr.image(size: '50x50', search_terms: ['sports'])
    Faker::LoremFlickr.image(size: '50x50', search_terms: ['sports'], match_all: true)
    Faker::LoremFlickr.pixelated_image(size: '50x50')
    Faker::LoremFlickr.pixelated_image(size: '50x50', search_terms: ['sports'])
    Faker::LoremFlickr.pixelated_image(size: '50x50', search_terms: ['sports'], match_all: true)
    Faker::LoremPixel.image(size: '50x50')
    Faker::LoremPixel.image(size: '50x50', is_gray: true)
    Faker::LoremPixel.image(size: '50x50', is_gray: true, category: 'sports')
    Faker::LoremPixel.image(size: '50x50', is_gray: true, category: 'sports', number: 5)
    Faker::LoremPixel.image(size: '50x50', is_gray: true, category: 'sports', number: 5, text: 'football')
    Faker::LoremPixel.image(size: '50x50', is_gray: true, category: 'sports', number: 5, text: 'football', secure: true)
    Faker::Markdown.sandwich(sentences: 5)
    Faker::Markdown.sandwich(sentences: 5, repeat: 1)
    Faker::Measurement.height(amount: 5)
    Faker::Measurement.length(amount: 5)
    Faker::Measurement.metric_height(amount: 5)
    Faker::Measurement.metric_length(amount: 5)
    Faker::Measurement.metric_volume(amount: 5)
    Faker::Measurement.metric_weight(amount: 5)
    Faker::Measurement.volume(amount: 5)
    Faker::Measurement.weight(amount: 5)
    Faker::Name.initials(number: 5)
    Faker::NationalHealthService.check_digit(number: 5)
    Faker::Number.between(from: 0)
    Faker::Number.between(from: 0, to: 10)
    Faker::Number.decimal(l_digits: 5)
    Faker::Number.decimal(l_digits: 5, r_digits: 5)
    Faker::Number.decimal_part(digits: 5)
    Faker::Number.hexadecimal(digits: 5)
    Faker::Number.leading_zero_number(digits: 5)
    Faker::Number.negative(from: 0)
    Faker::Number.negative(from: 0, to: 10)
    Faker::Number.normal(mean: 1)
    Faker::Number.normal(mean: 1, standard_deviation: 1)
    Faker::Number.number(digits: 5)
    Faker::Number.positive(from: 0)
    Faker::Number.positive(from: 0, to: 10)
    Faker::Number.within(range: 0..10)
    Faker::PhoneNumber.extension(length: 5)
    Faker::PhoneNumber.subscriber_number(length: 5)
    Faker::Placeholdit.image(size: '50x50')
    Faker::Placeholdit.image(size: '50x50', format: 'png')
    Faker::Placeholdit.image(size: '50x50', format: 'png', background_color: 'ffffff')
    Faker::Placeholdit.image(size: '50x50', format: 'png', background_color: 'ffffff', text_color: '000')
    Faker::Placeholdit.image(size: '50x50', format: 'png', background_color: 'ffffff', text_color: '000', text: 'custom text')
    Faker::Relationship.familial(connection: 'Grandfather')
    Faker::Source.hello_world(lang: 'ruby')
    Faker::Source.print_1_to_10(lang: 'ruby')
    Faker::String.random(length: 5)
    Faker::Stripe.ccv(card_type: 'amex')
    Faker::Stripe.invalid_card(card_error: 'addressZipFail')
    Faker::Stripe.valid_card(card_type: 'amex')
    Faker::Stripe.valid_token(card_type: 'amex')
    Faker::Time.backward(days: 365)
    Faker::Time.backward(days: 365, period: :all)
    Faker::Time.backward(days: 365, period: :all, format: :short)
    Faker::Time.between(from: DateTime.now - 1, to: DateTime.now)
    Faker::Time.between(from: DateTime.now - 1, to: DateTime.now, format: :long)
    Faker::Time.forward(days: 365)
    Faker::Time.forward(days: 365, period: :all)
    Faker::Time.forward(days: 365, period: :all, format: :short)
    Faker::Types.complex_rb_hash(number: 5)
    Faker::Types.rb_array(len: 5)
    Faker::Types.rb_hash(number: 5)
    Faker::Types.rb_hash(number: 5, node_type: 'string')
    Faker::Types.rb_integer(from: 0)
    Faker::Types.rb_integer(from: 0, to: 10)
    Faker::Types.rb_string(words: 5)
    Faker::Vehicle.kilometrage(min: 0)
    Faker::Vehicle.kilometrage(min: 0, max: 10)
    Faker::Vehicle.license_plate(state_abbreviation: 'CA')
    Faker::Vehicle.mileage(min: 0)
    Faker::Vehicle.mileage(min: 0, max: 10)
    Faker::Vehicle.model(make_of_model: 'Tesla')
    Faker::WorldCup.group(group: 'groupA')
    Faker::WorldCup.roster(country: 'Spain')
    Faker::WorldCup.roster(country: 'Spain', node_type: 'forward')
    Faker::Movies::StarWars.quote(character: 'foobar')
  EOS

  include_examples 'convertable'
end
